

siege : 워크로드 생성하는 툴
~~~
부하 테스트 Pod 설치
아래 스크립트를 terminal 에 복사하여 siege 라는 Pod 를 생성한다.
kubectl apply -f - <<EOF
apiVersion: v1
kind: Pod
metadata:
  name: siege
spec:
  containers:
  - name: siege
    image: apexacme/siege-nginx
EOF
~~~

생성된 siege Pod 안쪽에서 정상작동 확인
~~~
kubectl exec -it siege -- /bin/bash
siege -c1 -t2S -v http://order:8080/orders
exit
~~~

2. readinessProbe 를 설정하고 배포 진행
2.1 Readiness probe 설정을 MSAEasy 의 deployment 생성을 하여 가져온다:

~~~
    spec:
      containers:
        - name: delivery
          image: username/delivery:latest
          ports:
            - containerPort: 8080
          readinessProbe:    # 이부분!
            httpGet:
              path: '/orders'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
~~~

~~~
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order
  labels:
    app: order
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order
  template:
    metadata:
      labels:
        app: order
    spec:
      containers:
        - name: order
          image: jinyoung/order:stable
          ports:
            - containerPort: 8080
          readinessProbe:    # 이부분!
            httpGet:
              path: '/orders'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
~~~



2.2 siege 터미널을 열어서 충분한 시간만큼 부하를 준다.
~~~
kubectl exec -it siege -- /bin/bash
siege -c1 -t60S -v http://order:8080/orders --delay=1S
~~~

2.3 배포한다
~~~
kubectl apply -f deployment.yml
~~~

2.5 siege 로그를 보면서 배포시 무정지로 배포된 것을 확인한다.
~~~
Transactions:                    112 hits
Availability:                 100.00 %
Elapsed time:                  59.58 secs
~~~
주의점: siege 테스트를 걸어놓은 후 배포해야 정확한 테스트가 이루어집니다.
